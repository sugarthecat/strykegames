/**
 * a Web-based CNF-SAT solver. This manages the files.
 * Stores the files in DIMACS format
 */
/**
 * Downloads the currently displayed file
 */
function download() {
    let cnf = getCNFData();
    let variables = []
    for (let i = 0; i < cnf.length; i++) {
        for (let j = 0; j < cnf[i].length; j++) {
            if (!variables.includes(cnf[i][j].v)) {
                variables.push(cnf[i][j].v)
            }
        }
    }
    let stringData = `c generated by TJ Nickerson's CNF-SAT editor\np cnf ${variables.length} ${cnf.length}`
    for (let i = 0; i < cnf.length; i++) {
        stringData += "\n"
        for (let j = 0; j < cnf[i].length; j++) {
            stringData += (cnf[i][j].n ? "" : "-") + (variables.indexOf(cnf[i][j].v) + 1) + " "
        }
        stringData += "0"
    }
    downloadFile(stringData)
    //prep file for download
}
/**
 * Loads the file from the given input element. Credit to the following stack overflow thread:
 * 
 * https://stackoverflow.com/questions/31746837/reading-uploaded-text-file-contents-in-html
 */
function loadFile() {
    var fileToLoad = document.getElementById("fileToLoad").files[0];

    var fileReader = new FileReader();
    fileReader.onload = function (fileLoadedEvent) {
        var textFromFileLoaded = fileLoadedEvent.target.result;
        loadCNFData(textFromFileLoaded)
    };

    fileReader.readAsText(fileToLoad, "UTF-8");
}
function loadCNFData(data) {
    //clear current problem
    while(clauses.length > 0){
        clauses.pop().Delete();
    }
    //read data and confirm authenticity while loading into HTML
    let headerRead = false;
    let rows = data.split("\n")
    for (let i = 0; i < rows.length; i++) {
        while(rows[i].includes("  ")){
            rows[i] = rows[i].replace("  "," ")
        }
        if(rows[i].charAt(0) == " "){
            rows[i] = rows[i].substring(1)
        }
        if (rows[i].charAt(0) == "c") {
            continue;
        }
        let rowData = rows[i].split(" ");
        if (headerRead) {
            let clause = new OrClause()
            clause.ClearLiterals();
            if(rowData.pop().charAt(0) != "0"){
                console.error(`Row ${i+1} does not end with 0`)
                alert("Improperly formatted data");
                return;
            }
            for(let j = 0; j<rowData.length; j++){
                let inverted = false;
                let boolVal = parseInt(rowData[j]);
                if(boolVal < 0){
                    boolVal *= -1;
                    inverted = true;
                }
                let literal = new Literal();
                literal.setVariable(boolVal.toString())
                literal.setNegation(inverted)
                clause.AddLiteral(literal)
            }
            addClause(clause);
        } else {
            if (rowData[0] != "p" || rowData[1] != "cnf") {
                console.error(`Improper formatted header: ${rowData}`)
                alert("Improperly formatted data");
                return;
            }
            headerRead = true;
        }
    }
    //
}
/**
 * Not my code. Downloads the file, given in string format
 * @param {String} data The text data to download
 * https://stackoverflow.com/questions/13405129/create-and-save-a-file-with-javascript
 */
function downloadFile(data) {
    let currDate = new Date();
    let filename = `formula-${currDate.getMonth() + 1}-${currDate.getDate()}.cnf`
    var file = new Blob([data], { type: "cnf" });
    if (window.navigator.msSaveOrOpenBlob) // IE10+
        window.navigator.msSaveOrOpenBlob(file, filename);
    else { // Others
        var a = document.createElement("a"),
            url = URL.createObjectURL(file);
        a.href = url;
        a.download = filename;
        document.body.appendChild(a);
        a.click();
        setTimeout(function () {
            document.body.removeChild(a);
            window.URL.revokeObjectURL(url);
        }, 0);
    }
}
